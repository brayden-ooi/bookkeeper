package pages_transactions

import "github.com/brayden-ooi/bookkeeper/internal/view"
import "net/http"
import "github.com/brayden-ooi/bookkeeper/internal/database"
import "github.com/brayden-ooi/bookkeeper/internal/service/entry"
import "fmt"
import "github.com/brayden-ooi/bookkeeper/internal/service/transaction"
import "github.com/brayden-ooi/bookkeeper/internal/service/entry"
import "github.com/brayden-ooi/bookkeeper/internal/database"

templ Create(txID string, accounts []database.Account) {
	@view.Layout() {
		@view.Header()
		@view.PageContainer("flex flex-col items-center justify-center") {
			<div>
				<p>Transaction No. { txID }</p>
			</div>
			<form action="/transaction/create" method={ http.MethodPost } autocomplete="off">
				@transactionDescriptionInput("")
				// entries
				for i := range 2 {
					@transactionEntry(
            txEntryAccountSelector(accounts, i),
            txEntryTypeSelector(i),
            txEntryAmtInput("0", i),
          i)
				}
			</form>
		}
	}
}

templ txEntryAccountSelector(accounts []database.Account, i int) {
			<select name={ entry.AccID(i) } id={ entry.AccID(i) } required>
				for _, acc := range accounts {
					<option value={ acc.ID }>{ acc.Name }</option>
				}
			</select>
}

templ txEntryTypeSelector(i int) {
	<input type="radio" name={ entry.Type(i) } id={ fmt.Sprintf("%s-debit", entry.Type(i)) } value="debit" checked/>
	<label for={ fmt.Sprintf("%s-debit", entry.Type(i)) }>Debit</label>
	<input type="radio" name={ entry.Type(i) } id={ fmt.Sprintf("%s-credit", entry.Type(i)) } value="credit"/>
	<label for={ fmt.Sprintf("%s-credit", entry.Type(i)) }>Credit</label>
}

templ txEntryAmtInput(amt string, i int) {
	<sl-input
 				type="number"
 				id={ entry.Amount(i) }
 				name={ entry.Amount(i) }
 				placeholder="amount"
 				required
 				min="0"
 		label="Amount"
 		value={ amt }
	></sl-input>
}
